
function(add_unit_test name)
    add_executable(${name} ${ARGN})
    target_link_libraries(${name} PRIVATE libnstd::Core)
    target_compile_definitions(${name} PRIVATE DEBUG)
    set_property(TARGET ${name} PROPERTY FOLDER "test")
    source_group("" FILES ${ARGN})
    add_test(NAME ${name} COMMAND ${name})
    set_tests_properties(${name} PROPERTIES TIMEOUT 20)
endfunction()

add_unit_test(TestArray TestArray.cpp)
add_unit_test(TestAtomic TestAtomic.cpp)
add_unit_test(TestBuffer TestBuffer.cpp)
add_unit_test(TestCallback TestCallback.cpp)
add_unit_test(TestConsole TestConsole.cpp)
add_unit_test(TestDebug TestDebug.cpp)
add_unit_test(TestDirectory TestDirectory.cpp)
add_unit_test(TestError TestError.cpp)
add_unit_test(TestFile TestFile.cpp)
add_unit_test(TestFuture TestFuture.cpp)
add_unit_test(TestHashMap TestHashMap.cpp)
add_unit_test(TestHashSet TestHashSet.cpp)
add_unit_test(TestJson TestJson.cpp)
target_link_libraries(TestJson PRIVATE libnstd::Document)
add_unit_test(TestList TestList.cpp)
add_unit_test(TestLog TestLog.cpp)
add_unit_test(TestMap TestMap.cpp)
add_unit_test(TestMonitor TestMonitor.cpp)
add_unit_test(TestMultiMap TestMultiMap.cpp)
add_unit_test(TestMutex TestMutex.cpp)
add_unit_test(TestPoolList TestPoolList.cpp)
add_unit_test(TestPoolMap TestPoolMap.cpp)
add_unit_test(TestProcess TestProcess.cpp)
add_unit_test(TestRefCount TestRefCount.cpp)
add_unit_test(TestSemaphore TestSemaphore.cpp)
add_unit_test(TestServer TestServer.cpp)
target_link_libraries(TestServer PRIVATE libnstd::Socket)
add_unit_test(TestSha256 TestSha256.cpp)
target_link_libraries(TestSha256 PRIVATE libnstd::Crypto)
add_unit_test(TestSignal TestSignal.cpp)
add_unit_test(TestSocket TestSocket.cpp)
target_link_libraries(TestSocket PRIVATE libnstd::Socket)
add_unit_test(TestString TestString.cpp)
add_unit_test(TestThread TestThread.cpp)
add_unit_test(TestTime TestTime.cpp)
add_unit_test(TestUnicode TestUnicode.cpp)
add_unit_test(TestVariant TestVariant.cpp)
add_unit_test(TestXml TestXml.cpp)
target_link_libraries(TestXml PRIVATE libnstd::Document)



